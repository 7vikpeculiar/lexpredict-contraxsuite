version: "3.3"
services:
# Service names should comply with the rules of building DNS names - they will be available
# under these domain names inside the cluster virtual network.
# (Service names should not contain underscores.)


  contrax-webdav:
    image: bytemark/webdav:2.4
    volumes:
      - contraxsuite_data_media:/var/lib/dav
    networks:
      - contrax_net
    environment:   # No need for auth - in prod envs the server is not accessible from outside of our network
      AUTH_TYPE: Basic
      USERNAME: ${DOCKER_WEBDAV_AUTH_USER}
      PASSWORD: ${DOCKER_WEBDAV_AUTH_PASSWORD}
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  # There are two curator serivices deleting old log indexes here - one for filebeat and one for metricbeat.
  # This is done because there was an existing simple cron+curator docker image which supports
  # only specifying a single index prefix. It doesn't use a lot of memory and debugging/maintaining
  # more complicated config is worse than having two services.
  contrax-curator_filebeat:
    image: stefanprodan/es-curator-cron
    networks:
      - contrax_net
    environment:
      - "PERIOD=15min"
      - "KEEP_DAYS=30"
      - "INDEX_PREFIX=filebeat-"
    command: "--host contrax-elasticsearch --port 9200"
    depends_on:
      - contrax-rabbitmq
      - contrax-db
      - contrax-redis
      - contrax-elasticsearch
      - contrax-uwsgi
      - contrax-celery

  contrax-curator_metricbeat:
    image: stefanprodan/es-curator-cron
    networks:
      - contrax_net
    environment:
      - "PERIOD=15min"
      - "KEEP_DAYS=3"
      - "INDEX_PREFIX=metricbeat-"
    command: "--host contrax-elasticsearch --port 9200"
    depends_on:
      - contrax-rabbitmq
      - contrax-db
      - contrax-redis
      - contrax-elasticsearch
      - contrax-uwsgi
      - contrax-celery

  contrax-redis:
    image: redis
    volumes:
      - redis_data:/data
    networks:
      - contrax_net
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
#    ports: #
#      - 127.0.0.1:63790:6379 #

  contrax-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    configs:
      - source: elasticsearch_${ELASTICSEARCH_CONFIG_VERSION}
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - contrax_net
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '${DOLLAR}{DOCKER_ELASTICSEARCH_CPUS}'
          memory: ${DOLLAR}{DOCKER_ELASTICSEARCH_MEMORY}
      placement:
        constraints: [node.role == manager]
#    ports: #
#      - 127.0.0.1:19200:9200 #

  contrax-kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.5.4
    networks:
      - contrax_net
    depends_on:
      - contrax-elasticsearch
    environment:
      - "ELASTICSEARCH_URL=http://${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}:9200"
      - "SERVER_BASEPATH=${DOLLAR}{DOCKER_KIBANA_BASE_PATH}"
#    ports:
#      - 127.0.0.1:5601:5601
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  contrax-filebeat:
    image: docker.elastic.co/beats/filebeat:6.5.4
    user: root
    volumes:
      - postgres_data_11:/data/pg_data
      - contraxsuite_logs:/data/logs
      - filebeat_data:/usr/share/filebeat/data
      - contraxsuite_internal_nginx_logs:/data/nginx_logs
    configs:
      - source: filebeat_${FILEBEAT_CONFIG_VERSION}
        target: /usr/share/filebeat/filebeat.yml
    networks:
      - contrax_net
    depends_on:
      - contrax-elasticsearch
      - contrax-kibana
    deploy:
      mode: global
      resources:
        limits:
          cpus: '1'
          memory: 2GB

  contrax-metricbeat:
    image: docker.elastic.co/beats/metricbeat:6.5.4
    volumes:
      - metricbeat_data:/usr/share/metricbeat/data
      - /var/run/docker.sock:/hostfs/var/run/docker.sock
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
    command: -e -system.hostfs=/hostfs
    user: root
    configs:
      - source: metricbeat_${METRICBEAT_CONFIG_VERSION}
        target: /usr/share/metricbeat/metricbeat.yml
    networks:
      - contrax_net
    depends_on:
      - contrax-elasticsearch
      - contrax-kibana
    deploy:
      # mode: global
      replicas: 0 # by default we disable mertricbeat to free more resources
      resources:
        limits:
          cpus: '1'
          memory: 2GB

  contrax-rabbitmq:
    image: rabbitmq:3-management
    hostname: contrax-rabbitmq
    networks:
      - contrax_net
    environment:
      - "RABBITMQ_DEFAULT_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "RABBITMQ_DEFAULT_PASS=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "RABBITMQ_DEFAULT_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
#    ports: #
#     - 127.0.0.1:56720:5672 #

  contrax-db:
    image: postgres:11.5
    environment:
      - "PGDATA=/var/lib/contraxsuite-postgres"
      - "POSTGRES_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "POSTGRES_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "POSTGRES_DB=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "POSTGRES_MAX_BACKUP_NUMBER=${DOLLAR}{DOCKER_PG_MAX_BACKUP_NUMBER}"
    command: bash -c "${POWA_INSTALL} service cron start && /usr/local/bin/docker-entrypoint.sh postgres -c config_file=/contraxsuite/postgresql.conf"
    volumes:
      - postgres_data_11:/var/lib/contraxsuite-postgres
      - backup:/backup
    configs:
      - source: pg_${PG_CONFIG_VERSION}
        target: /contraxsuite/postgresql.conf
      - source: pg_backup_script_${PG_BACKUP_SCRIPT_CONFIG_VERSION}
        target: /contraxsuite/db-backup.sh
      - source: pg_backup_cron_${PG_BACKUP_CRON_CONFIG_VERSION}
        target: /etc/crontab
      - source: pg_init_sql_${PG_INIT_SQL_CONFIG_VERSION}
        target: /docker-entrypoint-initdb.d/postgres_init.sql
    networks:
      - contrax_net
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    ports: #
      - 0.0.0.0:5432:5432 #
#    ports: #
#      - 127.0.0.1:54320:5432 #

  contrax-celery-high:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "celery-high-prio"]
    environment:
      - "DOCKER_CELERY_CONCURRENCY=4"
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_FRONTEND_ROOT_URL=${DOLLAR}{DOCKER_FRONTEND_ROOT_URL}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
      - "DOCKER_WEBDAV_SERVER_NAME=${DOLLAR}{DOCKER_WEBDAV_SERVER_NAME}"
      - "DOCKER_WEBDAV_AUTH_USER=${DOLLAR}{DOCKER_WEBDAV_AUTH_USER}"
      - "DOCKER_WEBDAV_AUTH_PASSWORD=${DOLLAR}{DOCKER_WEBDAV_AUTH_PASSWORD}"
      - "LEXNLP_TIKA_PARSER_MODE=${DOLLAR}{LEXNLP_TIKA_PARSER_MODE}"
    depends_on:
      - contrax-rabbitmq
      - contrax-db
      - contrax-redis
      - contrax-elasticsearch
      - contrax-uwsgi
    volumes:
      - contraxsuite_logs:/data/logs
      - celery_worker_state:/data/celery_worker_state
      - contraxsuite_ssl_certs:/ssl_certs
    deploy:
      mode: global # Exactly one instance per node. Primitive AWS autoscaling solution.
      # resources:
      #  limits:
      #    cpus: '${DOLLAR}{DOCKER_CELERY_CPUS}'
      #    memory: ${DOLLAR}{DOCKER_CELERY_MEMORY}
      placement:
        constraints: [node.role != manager]

  contrax-celery:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "celery"]
    environment:
      - "DOCKER_CELERY_CONCURRENCY=4"
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_FRONTEND_ROOT_URL=${DOLLAR}{DOCKER_FRONTEND_ROOT_URL}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
      - "DOCKER_WEBDAV_SERVER_NAME=${DOLLAR}{DOCKER_WEBDAV_SERVER_NAME}"
      - "DOCKER_WEBDAV_AUTH_USER=${DOLLAR}{DOCKER_WEBDAV_AUTH_USER}"
      - "DOCKER_WEBDAV_AUTH_PASSWORD=${DOLLAR}{DOCKER_WEBDAV_AUTH_PASSWORD}"
      - "LEXNLP_TIKA_PARSER_MODE=${DOLLAR}{LEXNLP_TIKA_PARSER_MODE}"
    depends_on:
      - contrax-rabbitmq
      - contrax-db
      - contrax-redis
      - contrax-elasticsearch
      - contrax-uwsgi
    volumes:
      - contraxsuite_logs:/data/logs
      - celery_worker_state:/data/celery_worker_state
      - contraxsuite_ssl_certs:/ssl_certs
    deploy:
      mode: global # Exactly one instance per node. Primitive AWS autoscaling solution.
      # resources:
      #  limits:
      #    cpus: '${DOLLAR}{DOCKER_CELERY_CPUS}'
      #    memory: ${DOLLAR}{DOCKER_CELERY_MEMORY}
      placement:
        constraints: [node.role != manager]

  contrax-celery-doc-load:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "celery-load"]
    environment:
      - "DOCKER_CELERY_CONCURRENCY=1"
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_FRONTEND_ROOT_URL=${DOLLAR}{DOCKER_FRONTEND_ROOT_URL}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
      - "DOCKER_WEBDAV_SERVER_NAME=${DOLLAR}{DOCKER_WEBDAV_SERVER_NAME}"
      - "DOCKER_WEBDAV_AUTH_USER=${DOLLAR}{DOCKER_WEBDAV_AUTH_USER}"
      - "DOCKER_WEBDAV_AUTH_PASSWORD=${DOLLAR}{DOCKER_WEBDAV_AUTH_PASSWORD}"
      - "LEXNLP_TIKA_PARSER_MODE=${DOLLAR}{LEXNLP_TIKA_PARSER_MODE}"
    depends_on:
      - contrax-rabbitmq
      - contrax-db
      - contrax-redis
      - contrax-elasticsearch
      - contrax-uwsgi
    volumes:
      - contraxsuite_logs:/data/logs
      - celery_worker_state:/data/celery_worker_state
      - contraxsuite_ssl_certs:/ssl_certs
    deploy:
      mode: global # Exactly one instance per node. Primitive AWS autoscaling solution.
      placement:
        constraints: [node.role != manager]

  contrax-celery-beat:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "celery-beat"]
    environment:
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_FRONTEND_ROOT_URL=${DOLLAR}{DOCKER_FRONTEND_ROOT_URL}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_NGINX_CERTIFICATE=${DOLLAR}{DOCKER_NGINX_CERTIFICATE}"
      - "DOCKER_NGINX_CERTIFICATE_KEY=${DOLLAR}{DOCKER_NGINX_CERTIFICATE_KEY}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
      - "DOCKER_WEBDAV_SERVER_NAME=${DOLLAR}{DOCKER_WEBDAV_SERVER_NAME}"
      - "DOCKER_WEBDAV_AUTH_USER=${DOLLAR}{DOCKER_WEBDAV_AUTH_USER}"
      - "DOCKER_WEBDAV_AUTH_PASSWORD=${DOLLAR}{DOCKER_WEBDAV_AUTH_PASSWORD}"
    depends_on:
      - contrax-rabbitmq
      - contrax-db
      - contrax-redis
      - contrax-elasticsearch
      - contrax-uwsgi
      - contrax-celery
    volumes:
      - contraxsuite_logs:/data/logs
      - celery_worker_state:/data/celery_worker_state
      - contraxsuite_ssl_certs:/ssl_certs
      - contraxsuite_data_media:/data/media
    deploy:
      resources:
        limits:
          cpus: '${DOLLAR}{DOCKER_CELERY_BEAT_CPUS}'
          memory: ${DOLLAR}{DOCKER_CELERY_BEAT_MEMORY}
      replicas: 1
      placement:
        constraints: [node.role == manager]


  contrax-uwsgi:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "uwsgi"]
    environment:
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_FRONTEND_ROOT_URL=${DOLLAR}{DOCKER_FRONTEND_ROOT_URL}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_DJANGO_JQWIDGETS_ARCHIVE=${DOLLAR}{DOCKER_DJANGO_JQWIDGETS_ARCHIVE}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
      - "DOCKER_WEBDAV_SERVER_NAME=${DOLLAR}{DOCKER_WEBDAV_SERVER_NAME}"
      - "DOCKER_WEBDAV_AUTH_USER=${DOLLAR}{DOCKER_WEBDAV_AUTH_USER}"
      - "DOCKER_WEBDAV_AUTH_PASSWORD=${DOLLAR}{DOCKER_WEBDAV_AUTH_PASSWORD}"
    volumes:
      - contraxsuite_deployment_uuid:/deployment_uuid
      - contraxsuite_static_files:/contraxsuite_services/staticfiles
      - contraxsuite_additional_fixtures:/contraxsuite_services/fixtures/additional
      - contraxsuite_third_party_dependencies:/third_party_dependencies
      - contraxsuite_data_media:/data/media
      - contraxsuite_data_update:/data/data_update
      - contraxsuite_logs:/data/logs
      - contraxsuite_ssl_certs:/ssl_certs
    depends_on:
      - contrax-db
      - contrax-redis
      - contrax-rabbitmq
      - contrax-elasticsearch
    deploy:
      resources:
        limits:
          memory: ${DOLLAR}{DOCKER_UWSGI_MEMORY}
      replicas: 1
      placement:
        constraints: [node.role == manager]

  contrax-daphne:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "daphne"]
    environment:
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_DJANGO_JQWIDGETS_ARCHIVE=${DOLLAR}{DOCKER_DJANGO_JQWIDGETS_ARCHIVE}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
      - "DOCKER_WEBDAV_SERVER_NAME=${DOLLAR}{DOCKER_WEBDAV_SERVER_NAME}"
      - "DOCKER_WEBDAV_AUTH_USER=${DOLLAR}{DOCKER_WEBDAV_AUTH_USER}"
      - "DOCKER_WEBDAV_AUTH_PASSWORD=${DOLLAR}{DOCKER_WEBDAV_AUTH_PASSWORD}"
    volumes:
      - contraxsuite_deployment_uuid:/deployment_uuid
      - contraxsuite_static_files:/contraxsuite_services/staticfiles
      - contraxsuite_additional_fixtures:/contraxsuite_services/fixtures/additional
      - contraxsuite_third_party_dependencies:/third_party_dependencies
      - contraxsuite_data_media:/data/media
      - contraxsuite_data_update:/data/data_update
      - contraxsuite_logs:/data/logs
      - contraxsuite_ssl_certs:/ssl_certs
    depends_on:
      - contrax-db
      - contrax-redis
      - contrax-rabbitmq
      - contrax-elasticsearch
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  contrax-nginx:
    image: nginx:stable
    networks:
      - contrax_net
    volumes:
      - contraxsuite_nginx_conf:/etc/nginx
      - contraxsuite_nginx_certs:/etc/nginx/certificates
      - contraxsuite_frontend:/contraxsuite_frontend
      - contraxsuite_static_files:/contraxsuite_services/staticfiles
      - contraxsuite_data_media:/data/media
      - contraxsuite_internal_nginx_logs:/var/log/nginx
      - contraxsuite_nginx_server_include:/etc/nginx/server_include
    configs:
      - source: nginx_cust_${NGINX_CUSTOMER_CONF_VERSION}
        target: /etc/nginx/nginx-customer.conf
    ports:
      - 0.0.0.0:80:8080
      - 0.0.0.0:443:4443
      - 0.0.0.0:444:4444
    depends_on:
      - contrax-uwsgi
      - contrax-jupyter
      - contrax-flower
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  contrax-jupyter:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "jupyter"]
    environment:
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_FRONTEND_ROOT_URL=${DOLLAR}{DOCKER_FRONTEND_ROOT_URL}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_DJANGO_JQWIDGETS_ARCHIVE=${DOLLAR}{DOCKER_DJANGO_JQWIDGETS_ARCHIVE}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
      - "DOCKER_WEBDAV_SERVER_NAME=${DOLLAR}{DOCKER_WEBDAV_SERVER_NAME}"
      - "DOCKER_WEBDAV_AUTH_USER=${DOLLAR}{DOCKER_WEBDAV_AUTH_USER}"
      - "DOCKER_WEBDAV_AUTH_PASSWORD=${DOLLAR}{DOCKER_WEBDAV_AUTH_PASSWORD}"
    volumes:
      - contraxsuite_deployment_uuid:/deployment_uuid
      - contraxsuite_nginx_certs:/etc/nginx/certificates
      - contraxsuite_static_files:/contraxsuite_services/staticfiles
      - contraxsuite_third_party_dependencies:/third_party_dependencies
      - contraxsuite_data_media:/data/media
      - contraxsuite_logs:/data/logs
      - contraxsuite_internal_nginx_logs:/var/log/nginx
      - contraxsuite_notebooks:/contraxsuite_services/notebooks/persistent_volume
      - contraxsuite_jupyter_add_req:/contraxsuite_services/jupyter_add_req
      - contraxsuite_ssl_certs:/ssl_certs
    depends_on:
      - contrax-db
      - contrax-celery
      - contrax-uwsgi
      - contrax-redis
      - contrax-rabbitmq
      - contrax-elasticsearch
#    ports:
#      - 127.0.0.1:8888:8888
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '${DOLLAR}{DOCKER_JUPYTER_CPUS}'
          memory: ${DOLLAR}{DOCKER_JUPYTER_MEMORY}
      placement:
        constraints: [node.role == manager]

  contrax-flower:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "flower"]
    environment:
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_FRONTEND_ROOT_URL=${DOLLAR}{DOCKER_FRONTEND_ROOT_URL}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_DJANGO_JQWIDGETS_ARCHIVE=${DOLLAR}{DOCKER_DJANGO_JQWIDGETS_ARCHIVE}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
      - "DOCKER_WEBDAV_SERVER_NAME=${DOLLAR}{DOCKER_WEBDAV_SERVER_NAME}"
      - "DOCKER_WEBDAV_AUTH_USER=${DOLLAR}{DOCKER_WEBDAV_AUTH_USER}"
      - "DOCKER_WEBDAV_AUTH_PASSWORD=${DOLLAR}{DOCKER_WEBDAV_AUTH_PASSWORD}"
    volumes:
      - contraxsuite_deployment_uuid:/deployment_uuid
      - contraxsuite_nginx_certs:/etc/nginx/certificates
      - contraxsuite_static_files:/contraxsuite_services/staticfiles
      - contraxsuite_third_party_dependencies:/third_party_dependencies
      - contraxsuite_data_media:/data/media
      - contraxsuite_logs:/data/logs
      - contraxsuite_internal_nginx_logs:/var/log/nginx
      - contraxsuite_notebooks:/contraxsuite_services/notebooks
    depends_on:
      - contrax-db
      - contrax-celery
      - contrax-uwsgi
      - contrax-redis
      - contrax-rabbitmq
      - contrax-elasticsearch
    deploy:
      replicas: ${FLOWER_REPLICAS}
      resources:
        limits:
          cpus: '${DOLLAR}{DOCKER_FLOWER_CPUS}'
          memory: ${DOLLAR}{DOCKER_FLOWER_MEMORY}
      placement:
        constraints: [node.role == manager]

  contrax-logrotate:
    image: tutum/logrotate
    networks:
      - contrax_net
    configs:
      - source: logrotate_${LOGROTATE_CONFIG_VERSION}
        target: /etc/logrotate.conf
      - source: logs_cron_${LOGS_CRON_CONFIG_VERSION}
        target: /etc/crontabs/root
    volumes:
      - contraxsuite_internal_nginx_logs:/logs/nginx
      - contraxsuite_logs:/logs/contraxsuite
      - contraxsuite_logrotate:/logrotate
      - postgres_data_11:/logs/pg_data
    deploy:
      mode: global

  contrax-powa-web:
    image: powateam/powa-web
    networks:
      - contrax_net
    configs:
      - source: powa_web_${POWA_WEB_CONFIG_VERSION}
        target: /etc/powa-web.conf
    container_name: powa-web
    deploy:
      replicas: ${POWA_WEB_REPLICAS}

volumes:
  contraxsuite_deployment_uuid:
  contraxsuite_nginx_conf:
  contraxsuite_nginx_certs:
  contraxsuite_static_files:
  contraxsuite_frontend:
  contraxsuite_third_party_dependencies:
  contraxsuite_data_media:
  contraxsuite_notebooks:
  contraxsuite_logs:
  contraxsuite_internal_nginx_logs:
  contraxsuite_logrotate:
  contraxsuite_data_update:
  postgres_data_11:
  rabbitmq_data:
  elasticsearch_data:
  redis_data:
  filebeat_data:
  metricbeat_data:
  backup:
  celery_worker_state:
  contraxsuite_nginx_server_include:
  contraxsuite_additional_fixtures:
  contraxsuite_jupyter_add_req:
  contraxsuite_ssl_certs:

networks:
  contrax_net:

configs:
  filebeat_${FILEBEAT_CONFIG_VERSION}:
    file: ./filebeat.yml
  metricbeat_${METRICBEAT_CONFIG_VERSION}:
    file: ./metricbeat.yml
  elasticsearch_${ELASTICSEARCH_CONFIG_VERSION}:
    file: ./elasticsearch.yml
  logrotate_${LOGROTATE_CONFIG_VERSION}:
    file: ./logrotate.conf
  logs_cron_${LOGS_CRON_CONFIG_VERSION}:
    file: ./logs-cron.conf
  pg_${PG_CONFIG_VERSION}:
    file: ./postgresql.conf
  pg_backup_script_${PG_BACKUP_SCRIPT_CONFIG_VERSION}:
    file: ./db-backup.sh
  pg_backup_cron_${PG_BACKUP_CRON_CONFIG_VERSION}:
    file: ./backup-cron.conf
  pg_init_sql_${PG_INIT_SQL_CONFIG_VERSION}:
    file: ./postgres_init.sql
  nginx_cust_${NGINX_CUSTOMER_CONF_VERSION}:
    file: ./nginx-customer.conf
  powa_web_${POWA_WEB_CONFIG_VERSION}:
    file: ./powa-web.conf
