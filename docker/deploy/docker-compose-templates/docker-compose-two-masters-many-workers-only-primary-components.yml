version: "3.3"
services:
# Service names should comply with the rules of building DNS names - they will be available
# under these domain names inside the cluster virtual network.
# (Service names should not contain underscores.)

  contrax-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    configs:
      - source: elasticsearch_${ELASTICSEARCH_CONFIG_VERSION}
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - contrax_net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.role == django
#    ports: #
#      - 127.0.0.1:19200:9200 #

  contrax-rabbitmq:
    image: rabbitmq:3-management
    hostname: contrax-rabbitmq
    networks:
      - contrax_net
    environment:
      - "RABBITMQ_DEFAULT_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "RABBITMQ_DEFAULT_PASS=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "RABBITMQ_DEFAULT_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.role == django
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
#    ports: #
#     - 127.0.0.1:56720:5672 #

  contrax-db:
    image: postgres:9.6
    environment:
      - "PGDATA=/var/lib/contraxsuite-postgres"
      - "POSTGRES_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "POSTGRES_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "POSTGRES_DB=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "POSTGRES_MAX_BACKUP_NUMBER=${DOLLAR}{DOCKER_PG_MAX_BACKUP_NUMBER}"
    command: bash -c "service cron start && /usr/local/bin/docker-entrypoint.sh postgres -c config_file=/contraxsuite/postgresql.conf"
    volumes:
      - postgres_data:/var/lib/contraxsuite-postgres
      - backup:/backup
    configs:
      - source: pg_${PG_CONFIG_VERSION}
        target: /contraxsuite/postgresql.conf
      - source: pg_backup_script_${PG_BACKUP_SCRIPT_CONFIG_VERSION}
        target: /contraxsuite/db-backup.sh
      - source: pg_backup_cron_${PG_BACKUP_CRON_CONFIG_VERSION}
        target: /etc/crontab
      - source: pg_init_sql_${PG_INIT_SQL_CONFIG_VERSION}
        target: /docker-entrypoint-initdb.d/postgres_init.sql
    networks:
      - contrax_net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == db
    #ports: #
    #  - 127.0.0.1:54320:5432 #

  contrax-tika:
    image: lexpredict/tika-server:1.9
    networks:
      - contrax_net
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.role != django
          - node.labels.role != db
#    ports: #
#      - 127.0.0.1:9998:9998 #

  contrax-celery:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "celery"]
    environment:
      - "DOCKER_CELERY_CONCURRENCY=4"
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
    depends_on:
      - contrax-rabbitmq
      - contrax-db
      - contrax-tika
      - contrax-redis
      - contrax-elasticsearch
      - contrax-uwsgi
    volumes:
      - contraxsuite_logs:/data/logs
      - celery_worker_state:/data/celery_worker_state
      - contraxsuite_ssl_certs:/ssl_certs
    deploy:
      mode: global # Exactly one instance per node. Primitive AWS autoscaling solution.
      placement:
        constraints:
          - node.labels.role != django
          - node.labels.role != db

  contrax-celery-beat:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "celery-beat"]
    environment:
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_NGINX_CERTIFICATE=${DOLLAR}{DOCKER_NGINX_CERTIFICATE}"
      - "DOCKER_NGINX_CERTIFICATE_KEY=${DOLLAR}{DOCKER_NGINX_CERTIFICATE_KEY}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
    depends_on:
      - contrax-rabbitmq
      - contrax-db
      - contrax-tika
      - contrax-redis
      - contrax-elasticsearch
      - contrax-uwsgi
      - contrax-celery
    volumes:
      - contraxsuite_logs:/data/logs
      - celery_worker_state:/data/celery_worker_state
      - contraxsuite_ssl_certs:/ssl_certs
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.role == django


  contrax-uwsgi:
    image: ${DOLLAR}{CONTRAXSUITE_IMAGE_FULL_NAME}:${DOLLAR}{CONTRAXSUITE_IMAGE_VERSION}
    networks:
      - contrax_net
    command: ["/start.sh",  "uwsgi"]
    environment:
      - "SHARED_USER_NAME=${DOLLAR}{SHARED_USER_NAME}"
      - "SHARED_USER_ID=${DOLLAR}{SHARED_USER_ID}"
      - "DOCKER_HOST_NAME_PG=${DOLLAR}{DOCKER_HOST_NAME_PG}"
      - "DOCKER_HOST_NAME_REDIS=${DOLLAR}{DOCKER_HOST_NAME_REDIS}"
      - "DOCKER_HOST_NAME_RABBITMQ=${DOLLAR}{DOCKER_HOST_NAME_RABBITMQ}"
      - "DOCKER_HOST_NAME_ELASTICSEARCH=${DOLLAR}{DOCKER_HOST_NAME_ELASTICSEARCH}"
      - "DOCKER_HOST_NAME_UWSGI=${DOLLAR}{DOCKER_HOST_NAME_UWSGI}"
      - "DOCKER_HOST_NAME_KIBANA=${DOLLAR}{DOCKER_HOST_NAME_KIBANA}"
      - "DOCKER_PG_USER=${DOLLAR}{DOCKER_PG_USER}"
      - "DOCKER_PG_PASSWORD=${DOLLAR}{DOCKER_PG_PASSWORD}"
      - "DOCKER_PG_DB_NAME=${DOLLAR}{DOCKER_PG_DB_NAME}"
      - "DOCKER_RABBITMQ_VHOST=${DOLLAR}{DOCKER_RABBITMQ_VHOST}"
      - "DOCKER_RABBITMQ_USER=${DOLLAR}{DOCKER_RABBITMQ_USER}"
      - "DOCKER_RABBITMQ_PASSWORD=${DOLLAR}{DOCKER_RABBITMQ_PASSWORD}"
      - "DOCKER_DJANGO_HOST_NAME=${DOLLAR}{DOCKER_DJANGO_HOST_NAME}"
      - "DOCKER_DJANGO_EMAIL_BACKEND=${DOLLAR}{DOCKER_DJANGO_EMAIL_BACKEND}"
      - "DOCKER_DJANGO_EMAIL_HOST=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST}"
      - "DOCKER_DJANGO_EMAIL_PORT=${DOLLAR}{DOCKER_DJANGO_EMAIL_PORT}"
      - "DOCKER_DJANGO_EMAIL_USE_TLS=${DOLLAR}{DOCKER_DJANGO_EMAIL_USE_TLS}"
      - "DOCKER_DJANGO_EMAIL_HOST_USER=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_USER}"
      - "DOCKER_DJANGO_EMAIL_HOST_PASSWORD=${DOLLAR}{DOCKER_DJANGO_EMAIL_HOST_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_NAME=${DOLLAR}{DOCKER_DJANGO_ADMIN_NAME}"
      - "DOCKER_DJANGO_ADMIN_PASSWORD=${DOLLAR}{DOCKER_DJANGO_ADMIN_PASSWORD}"
      - "DOCKER_DJANGO_ADMIN_EMAIL=${DOLLAR}{DOCKER_DJANGO_ADMIN_EMAIL}"
      - "DOCKER_DJANGO_DEBUG=${DOLLAR}{DOCKER_DJANGO_DEBUG}"
      - "DOCKER_DJANGO_DEBUG_SQL=${DOLLAR}{DOCKER_DJANGO_DEBUG_SQL}"
      - "DOCKER_DJANGO_SECRET_KEY=${DOLLAR}{DOCKER_DJANGO_SECRET_KEY}"
      - "DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DOLLAR}{DOCKER_DJANGO_ACCOUNT_EMAIL_VERIFICATION}"
      - "DOCKER_NGINX_SERVER_NAME=${DOLLAR}{DOCKER_NGINX_SERVER_NAME}"
      - "DOCKER_DJANGO_THEME_ARCHIVE=${DOLLAR}{DOCKER_DJANGO_THEME_ARCHIVE}"
      - "DOCKER_DJANGO_JQWIDGETS_ARCHIVE=${DOLLAR}{DOCKER_DJANGO_JQWIDGETS_ARCHIVE}"
      - "DOCKER_JUPYTER_BASE_URL=${DOLLAR}{DOCKER_JUPYTER_BASE_URL}"
      - "DOCKER_JUPYTER_PORT=${DOLLAR}{DOCKER_JUPYTER_PORT}"
      - "DOCKER_DJANGO_BASE_PATH=${DOLLAR}{DOCKER_DJANGO_BASE_PATH}"
      - "DOCKER_FLOWER_BASE_PATH=${DOLLAR}{DOCKER_FLOWER_BASE_PATH}"
    volumes:
      - contraxsuite_deployment_uuid:/deployment_uuid
      - contraxsuite_static_files:/contraxsuite_services/staticfiles
      - contraxsuite_additional_fixtures:/contraxsuite_services/fixtures/additional
      - contraxsuite_third_party_dependencies:/third_party_dependencies
      - contraxsuite_data_media:/data/media
      - contraxsuite_data_update:/data/data_update
      - contraxsuite_logs:/data/logs
      - contraxsuite_ssl_certs:/ssl_certs
    depends_on:
      - contrax-db
      - contrax-redis
      - contrax-rabbitmq
      - contrax-elasticsearch
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.role == django

  contrax-nginx:
    image: nginx:stable
    networks:
      - contrax_net
    volumes:
      - contraxsuite_nginx_conf:/etc/nginx
      - contraxsuite_nginx_certs:/etc/nginx/certificates
      - contraxsuite_frontend:/contraxsuite_frontend
      - contraxsuite_static_files:/contraxsuite_services/staticfiles
      - contraxsuite_data_media:/data/media
      - contraxsuite_internal_nginx_logs:/var/log/nginx
      - contraxsuite_nginx_server_include:/etc/nginx/server_include
    configs:
      - source: nginx_cust_${NGINX_CUSTOMER_CONF_VERSION}
        target: /etc/nginx/nginx-customer.conf
    ports:
      - 0.0.0.0:80:8080
      - 0.0.0.0:443:4443
    depends_on:
      - contrax-uwsgi
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.role == django

volumes:
  contraxsuite_deployment_uuid:
  contraxsuite_nginx_conf:
  contraxsuite_nginx_certs:
  contraxsuite_static_files:
  contraxsuite_frontend:
  contraxsuite_third_party_dependencies:
  contraxsuite_data_media:
  contraxsuite_notebooks:
  contraxsuite_logs:
  contraxsuite_internal_nginx_logs:
  contraxsuite_logrotate:
  contraxsuite_data_update:
  postgres_data:
  rabbitmq_data:
  elasticsearch_data:
  redis_data:
  filebeat_data:
  metricbeat_data:
  backup:
  celery_worker_state:
  contraxsuite_nginx_server_include:
  contraxsuite_additional_fixtures:
  contraxsuite_ssl_certs:

networks:
  contrax_net:

configs:
  filebeat_${FILEBEAT_CONFIG_VERSION}:
    file: ./filebeat.yml
  metricbeat_${METRICBEAT_CONFIG_VERSION}:
    file: ./metricbeat.yml
  elasticsearch_${ELASTICSEARCH_CONFIG_VERSION}:
    file: ./elasticsearch.yml
  logrotate_${LOGROTATE_CONFIG_VERSION}:
    file: ./logrotate.conf
  logs_cron_${LOGS_CRON_CONFIG_VERSION}:
    file: ./logs-cron.conf
  pg_${PG_CONFIG_VERSION}:
    file: ./postgresql.conf
  pg_backup_script_${PG_BACKUP_SCRIPT_CONFIG_VERSION}:
    file: ./db-backup.sh
  pg_backup_cron_${PG_BACKUP_CRON_CONFIG_VERSION}:
    file: ./backup-cron.conf
  pg_init_sql_${PG_INIT_SQL_CONFIG_VERSION}:
    file: ./postgres_init.sql
  nginx_cust_${NGINX_CUSTOMER_CONF_VERSION}:
    file: ./nginx-customer.conf
