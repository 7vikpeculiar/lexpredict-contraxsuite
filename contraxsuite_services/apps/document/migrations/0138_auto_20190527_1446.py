# Generated by Django 2.2 on 2019-05-27 14:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('document', '00137_historical_document_delete_pending'),
    ]

    operations = [
        migrations.CreateModel(
            name='SoftDeleteDocument',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('document.document',),
        ),
        migrations.AlterField(
            model_name='documentfield',
            name='type',
            field=models.CharField(choices=[('address', 'Address'), ('amount', 'Amount'), ('boolean', 'Boolean'), ('choice', 'Choice'), ('company', 'Company'), ('date', 'Date: Non-recurring Events'), ('date_recurring', 'Date: Recurring Events'), ('datetime', 'DateTime: Non-recurring Events'), ('duration', 'Duration'), ('float', 'Floating Point Number'), ('geography', 'Geography'), ('int', 'Integer Number'), ('linked_documents', 'Linked Documents'), ('money', 'Money'), ('multi_choice', 'Multi Choice'), ('person', 'Person'), ('related_info', 'Related Info'), ('string', 'String (vectorizer uses words as tokens)'), ('string_no_word_wrap', 'String (vectorizer uses whole value as a token)'), ('text', 'Long Text')], db_index=True, default='string', max_length=30),
        ),
        migrations.AlterField(
            model_name='documentfielddetector',
            name='text_part',
            field=models.CharField(choices=[('FULL', 'Whole text'), ('BEFORE_REGEXP', 'Before matching substring'), ('AFTER_REGEXP', 'After matching substring'), ('INSIDE_REGEXP', 'Inside matching substring')], db_index=True, default='FULL', help_text='Defines which part of the matching \nsentence / paragraph should be passed to the extraction function of the corresponding field type. \nExample: "2019-01-23 is the Start date and 2019-01-24 is the end date." If include regexp is "is.{0,100}Start" and \ntext part = BEFORE_REGEXP then "2019-01-23 " will be passed to get_dates().', max_length=30),
        ),
    ]
