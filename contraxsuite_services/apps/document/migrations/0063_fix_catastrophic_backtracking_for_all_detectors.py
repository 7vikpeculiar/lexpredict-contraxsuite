# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-08-22 17:08
from __future__ import unicode_literals

from django.db import migrations, models

BAD_PREFIXES = ['.*', '(.*?)', '(.*)']


def fix_regexp(regexp_to_fix):
    regexps = regexp_to_fix.split('\n')
    for index in range(len(regexps)):
        regexp = regexps[index]
        for prefix in BAD_PREFIXES:
            if regexp.startswith(prefix):
                regexp = regexp[len(prefix):]
            if regexp.endswith(prefix):
                regexp = regexp[:-len(prefix)]
            prefix += '\r'
            if regexp.endswith(prefix):
                regexp = regexp[:-len(prefix)]
        regexps[index] = regexp
    return '\n'.join(regexps)


def fix_field_detectors(apps, schema_editor):
    DocumentFieldDetector = apps.get_model('document', 'DocumentFieldDetector')
    for detector in DocumentFieldDetector.objects.all():
        modified = False
        if detector.include_regexps:
            regexp = fix_regexp(detector.include_regexps)
            if regexp != detector.include_regexps:
                detector.include_regexps = regexp
                modified = True
        if detector.exclude_regexps:
            regexp = fix_regexp(detector.exclude_regexps)
            if regexp != detector.exclude_regexps:
                detector.exclude_regexps = regexp
                modified = True
        if modified:
            detector.save()


class Migration(migrations.Migration):

    dependencies = [
        ('document', '0062_fix_catastrophic_backtracking'),
    ]

    operations = [
        migrations.RunPython(fix_field_detectors, reverse_code=migrations.RunPython.noop),
    ]
