# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-31 09:48
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('document', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('court_id', models.IntegerField(default=0)),
                ('type', models.CharField(db_index=True, max_length=30)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('abbreviation', models.CharField(db_index=True, max_length=20)),
            ],
            options={
                'ordering': ('court_id',),
            },
        ),
        migrations.CreateModel(
            name='CourtUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='extract.Court')),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ('text_unit', '-count', 'court'),
            },
        ),
        migrations.CreateModel(
            name='CurrencyUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_type', models.CharField(db_index=True, max_length=20)),
                ('currency', models.CharField(db_index=True, max_length=20)),
                ('amount', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ('text_unit', 'usage_type', 'currency', '-amount'),
            },
        ),
        migrations.CreateModel(
            name='DateDurationUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(db_index=True)),
                ('duration_str', models.CharField(db_index=True, max_length=20)),
                ('count', models.IntegerField(default=0)),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ('text_unit', 'duration', '-count'),
            },
        ),
        migrations.CreateModel(
            name='DateUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('format', models.CharField(choices=[('exact_date', 'exact_date'), ('without_day', 'without_day'), ('without_year', 'without_year')], db_index=True, default='exact_date', max_length=30)),
                ('count', models.IntegerField(default=0)),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ('text_unit', 'date', '-count'),
            },
        ),
        migrations.CreateModel(
            name='DefinitionUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition', models.CharField(db_index=True, max_length=128)),
                ('count', models.IntegerField(default=0)),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ('text_unit', '-count', 'definition'),
            },
        ),
        migrations.CreateModel(
            name='GeoAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locale', models.CharField(db_index=True, default='en-us', max_length=10)),
                ('alias', models.CharField(db_index=True, max_length=10)),
                ('type', models.CharField(db_index=True, default='abbreviation', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='GeoAliasUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('alias', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='extract.GeoAlias')),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ('text_unit', '-count', 'alias'),
            },
        ),
        migrations.CreateModel(
            name='GeoEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.PositiveSmallIntegerField(db_index=True, unique=True)),
                ('name', models.CharField(db_index=True, max_length=1024)),
                ('category', models.CharField(db_index=True, max_length=1024)),
                ('description', models.TextField(null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
            options={
                'ordering': ('name', 'entity_id', 'category'),
                'verbose_name_plural': 'Geo Entities',
            },
        ),
        migrations.CreateModel(
            name='GeoEntityUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='extract.GeoEntity')),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ('text_unit', '-count', 'entity'),
            },
        ),
        migrations.CreateModel(
            name='GeoRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(db_index=True, max_length=128)),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entity_a_set', to='extract.GeoEntity')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entity_b_set', to='extract.GeoEntity')),
            ],
        ),
        migrations.CreateModel(
            name='LegalTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(db_index=True, max_length=1024)),
                ('source', models.CharField(db_index=True, max_length=128, null=True)),
                ('definition_url', models.CharField(max_length=1024, null=True)),
            ],
            options={
                'ordering': ('term', 'source'),
            },
        ),
        migrations.CreateModel(
            name='LegalTermUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='extract.LegalTerm')),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ['-count', 'term__term'],
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=1024)),
                ('type', models.CharField(db_index=True, max_length=1024)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'ordering': ('name', 'type'),
                'verbose_name_plural': 'Parties',
            },
        ),
        migrations.CreateModel(
            name='PartyUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, db_index=True, max_length=1024, null=True)),
                ('count', models.IntegerField(default=0)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='extract.Party')),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ('text_unit', '-count', 'party'),
            },
        ),
        migrations.CreateModel(
            name='RegulationUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regulation_type', models.CharField(db_index=True, max_length=128)),
                ('regulation_name', models.CharField(db_index=True, max_length=1024)),
                ('count', models.IntegerField(default=0)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='extract.GeoEntity')),
                ('text_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.TextUnit')),
            ],
            options={
                'ordering': ('text_unit', '-count', 'regulation_type', 'entity'),
            },
        ),
        migrations.AlterUniqueTogether(
            name='party',
            unique_together=set([('name', 'type')]),
        ),
        migrations.AlterUniqueTogether(
            name='geoentity',
            unique_together=set([('name', 'category')]),
        ),
        migrations.AddField(
            model_name='geoalias',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='extract.GeoEntity'),
        ),
        migrations.AlterUniqueTogether(
            name='regulationusage',
            unique_together=set([('text_unit', 'entity', 'regulation_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='partyusage',
            unique_together=set([('text_unit', 'party')]),
        ),
        migrations.AlterUniqueTogether(
            name='legaltermusage',
            unique_together=set([('text_unit', 'term')]),
        ),
        migrations.AlterUniqueTogether(
            name='geoentityusage',
            unique_together=set([('text_unit', 'entity')]),
        ),
        migrations.AlterUniqueTogether(
            name='geoaliasusage',
            unique_together=set([('text_unit', 'alias')]),
        ),
        migrations.AlterUniqueTogether(
            name='definitionusage',
            unique_together=set([('text_unit', 'definition')]),
        ),
        migrations.AlterUniqueTogether(
            name='dateusage',
            unique_together=set([('text_unit', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='datedurationusage',
            unique_together=set([('text_unit', 'duration_str')]),
        ),
        migrations.AlterUniqueTogether(
            name='courtusage',
            unique_together=set([('text_unit', 'court')]),
        ),
    ]
